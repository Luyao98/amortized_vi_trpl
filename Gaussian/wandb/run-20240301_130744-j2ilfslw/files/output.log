tensor([[ 1.4176, -2.8420],
        [-0.9470,  0.0301],
        [ 0.8859, -0.9568],
        ...,
        [ 2.7444, -1.7442],
        [ 2.5682, -2.7970],
        [ 1.0274, -0.6701]])
Traceback (most recent call last):
  File "/home/luyao/amortized_vi_trpl/2DGaussian/model.py", line 200, in <module>
    reg_loss = alpha * (likelihood(mean_pred, chol_pred, model_samples_unproj) -
  File "/home/luyao/amortized_vi_trpl/2DGaussian/utils.py", line 247, in likelihood
    return ch.distributions.MultivariateNormal(mean, cov).log_prob(samples)
  File "/home/luyao/miniconda3/envs/ITPAL_luyao/lib/python3.7/site-packages/torch/distributions/multivariate_normal.py", line 150, in __init__
    super(MultivariateNormal, self).__init__(batch_shape, event_shape, validate_args=validate_args)
  File "/home/luyao/miniconda3/envs/ITPAL_luyao/lib/python3.7/site-packages/torch/distributions/distribution.py", line 57, in __init__
    f"Expected parameter {param} "
ValueError: Expected parameter covariance_matrix (Tensor of shape (8, 2, 2)) of distribution MultivariateNormal(loc: torch.Size([8, 2]), covariance_matrix: torch.Size([8, 2, 2])) to satisfy the constraint PositiveDefinite(), but found invalid values:
tensor([[[ 1.2892,  0.0000],
         [-0.8036,  0.4620]],
        [[ 1.8076,  0.0000],
         [-1.8205,  0.1697]],
        [[ 2.6340,  0.0000],
         [-0.8385,  1.1430]],
        [[ 1.3533,  0.0000],
         [-2.2224,  0.8713]],
        [[ 1.8902,  0.0000],
         [-1.6627,  0.6992]],
        [[ 1.0104,  0.0000],
         [-0.4449,  0.8732]],
        [[ 2.0065,  0.0000],
         [-0.6401,  1.0712]],
        [[ 1.0589,  0.0000],
         [-2.0866,  0.7878]]], grad_fn=<ExpandBackward0>)